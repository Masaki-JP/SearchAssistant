
————————————————————
2024年1月29日のコードレビュー会にていただいたアドバイス等

最速の検索を求めるならば、現在のSplashScreenを廃止し、LaunchScreenを実装するといい

ツールバーに並び替えなどの機能を実装する
人によっては、ラクマなどが最も使うプラットフォームだったりする。
できれば、うまいこと全部表示できないか？

CircleButtonの実装

@Environmentと@FocusState
ViewModel内にプロパティを追加し、それらとバインディング

onDismissなどの処理をViewModelに切り出し、ViewではviewModel.settingViewDismissActionを呼び出すような形にする

Repositoryプロトコルについて
fetchだけで事済む場合もある。

子Viewに関しては、そこまでアクセスレベルを意識しなくていいのでは？
イニシャライザ面倒だし、SwiftUIの場合は普通に開発してて間違って子ビューの値をいじってしまうことはない。

————————————————————

アプデ時に参考
https://tech.amefure.com/swift-appstore-public-version-up
ウィジェットターゲットのビルド番号とマーケティング番号（バージョン）の変更も忘れずに

 メジャーアップデート、マイナーアップデートの場合はタグをつける。例えば"v2.2.0"のタグをつける場合、"git tag v2.2.0"の実行後、"git push origin v2.2.0"を実行する。見た目の変更だけであれば、パッチアップデートのみとする。

————————————————————

やること
URLが入力された場合、それがhttp通信ならば警告を表示する。
引数にnewValueをとるonChangeメソッドはiOS17以降では非推奨になったためを新しいものに変更する


————————————————————


@FocusStateをViewModelに持たせることができない
ViewとViewModel間では問題なく動作するが、子Viewから@FocusStateを変更することができなかった。（コンパイルエラーが出ないところまでは持っていけた）


————————————————————

Google検索について
https://so-zou.jp/web-app/tech/search-engine/google/search/
https://webrandum.net/google-search-parameter/
http://www13.plala.or.jp/bigdata/google.html
https://dev.classmethod.jp/articles/check-url-structure-of-google/


I'm feeling luckyについて
https://www.google.com/search?btnI=I%27m+Feeling+Lucky&lr=lang_ja&ie=UTF-8&oe=UTF-8&q=

————————————————————


2023年10月8日時点でキーボードツールバーの問題がある模様。
なぜかアプリを起動して最初の一回のみ、ツールバーのボタンのフォントが大きくなってしまう。
→ fontモディファイアでbodyを指定し、一応は解決した


————————————————————

デバックエリアの黄色で表示される文章(Report NavigatorのConsole)

Unable to simultaneously satisfy constraints.
    Probably at least one of the constraints in the following list is one you don't want.
    Try this:
        (1) look at each constraint and try to figure out which you don't expect;
        (2) find the code that added the unwanted constraint or constraints and fix it.
    (Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints)
(
    "<NSAutoresizingMaskLayoutConstraint:0x280526df0 h=--& v=--& _UIToolbarContentView:0x1059b46a0.width == 0   (active)>",
    "<NSLayoutConstraint:0x280555860 H:|-(16)-[_UIButtonBarStackView:0x1059abf20]   (active, names: '|':_UIToolbarContentView:0x1059b46a0 )>",
    "<NSLayoutConstraint:0x2805558b0 H:[_UIButtonBarStackView:0x1059abf20]-(16)-|   (active, names: '|':_UIToolbarContentView:0x1059b46a0 )>"
)

Will attempt to recover by breaking constraint
<NSLayoutConstraint:0x2805558b0 H:[_UIButtonBarStackView:0x1059abf20]-(16)-|   (active, names: '|':_UIToolbarContentView:0x1059b46a0 )>

Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKitCore/UIView.h> may also be helpful.

下のようなシンプルなコードでも警告が表示された。

TextField("", text: $text)
    .toolbar {
        ToolbarItemGroup(placement: .keyboard) {
            Button("Button", action: {})
            Button("Button", action: {})
            Button("Button", action: {})
        }
    }






————————————————————

2023年10月9日

今後UserDefaultsを使用する際は、プライバシーマニフェストに使用する理由を記載する必要がある。後日対応する
https://qiita.com/4q_sano/items/f9a00097724d1327dbc0
https://developer.apple.com/documentation/foundation/userdefaults#2926902
https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_use_of_required_reason_api

————————————————————

2023年10月9日

「Search Assistant」ターゲットと「SAWidgetExtension」ターゲットの「Supported Destinations」を「iPhone, iPad, Mac(Designed for iPad)」から「iPhone」のみに変更した。
「iPhone Orientation」を「Portrait, Landscape Left, Landscape right」から「Portrait」のみに変更した。

————————————————————

2023年10月12日
Search Assistantターゲットの「Identity>App Category」を「Utilities」に変更

————————————————————

2023年10月12日

「Search Assistant.xcodeproj」をVSCodeで開き、「developmentRegion」を「en」から「ja」に変更
「PROJECT」→「Info」の「Locarizations」→「Locarization」から「English」と「Base」を削除
※ 「Base」は「Use Base Internationalization」のチェックを外した時点で消えるかも

————————————————————

2023年12月24日

以下の警告が出て「Enable」を押したところ「Use Base Internationalization」にチェックがついた。

Enable Base Internationalization
Enabling Base internationalization is recommended for all projects.

————————————————————














————————————————————

モックアップの作成に便利
https://mockuphone.com
2023年10月10日　2.0.0の時に使用↓
https://mockuphone.com/device/apple-iphone14pro-spaceblack/
使ってないけど良さげ↓
https://placeit.net/c/mockups/stages/mockup-featuring-two-iphones-x-floating-against-a-solid-color-background-28764?colorFolder_Background=transparent

————————————————————

(設定、Face IDとパスコード、ロック中にアクセスを許可のロック画面のウィジェットをオンにする。しかし、これがオフの時でも、普通にPayPayとかは表示されている。なぜかわからない。)
→ .privacySensitive(false)が変なとこについてたのが原因

————————————————————

SafariViewについて

Appにおけるウェブビューを実現するには、WKWebViewとSFSafariViewControllerのどちらを使うべきですか
https://developer.apple.com/jp/news/?id=trjs0tcd
ASWebAuthenticationSession
https://developer.apple.com/documentation/authenticationservices/aswebauthenticationsession
SFSafariViewController
https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller

————————————————————
